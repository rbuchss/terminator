[alias]
  # show aliases
  aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort
  # basics
  a = add
  st = status -s
  stw = status
  ci = commit -v
  cia = commit --amend â€“C HEAD
  cl = clone
  co = checkout
  br = branch
  rso = remote show origin
  # diffs
  df = diff
  dw = diff --word-diff
  dc = diff --cached
  dcw = diff --word-diff --cached
  # reset
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard
  unstage = reset HEAD --
  # stash
  sl = stash list
  sa = stash apply
  ss = stash save
  # logs
  ls = log --graph --pretty=format:"%C(bold)%C(yellow)%h%C(bold)%Cred%d\\ %Creset%s%C(bold)%C(cyan)\\ [%cn]" --decorate
  ll = log --graph --pretty=format:"%C(bold)%C(yellow)%h%C(bold)%Cred%d\\ %Creset%s%C(bold)%C(cyan)\\ [%cn]" --decorate --numstat
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  lds = log --graph --pretty=format:"%C(bold)%C(yellow)%h\\ %ad%C(bold)%Cred%d\\ %Creset%s%C(bold)%C(cyan)\\ [%cn]" --decorate --date=short
  ld = log --graph --pretty=format:"%C(bold)%C(yellow)%h\\ %ad%C(bold)%Cred%d\\ %Creset%s%C(bold)%C(cyan)\\ [%cn]" --decorate --date=relative
  le = log --graph --oneline --decorate
  fl = log -u
  dl = "!git ll -1"
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"
  changes = "!f() { git log --pretty=format:'* %s' $1..$2; }; f"
  churn = !git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}'
  # show last tag
  lasttag = describe --tags --abbrev=0
  tags = tag -l
  # cleaners
  local-prune = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$"| xargs git branch -d; }; f"
  prune-all = "!f() { git remote prune ${1-origin} && git local-prune ${2-master}; }; f"
  # enable shell aliased execs at the repo root directory
  # ex. `git exec make` will run at repo root regardless of pwd
  exec = "!exec "
